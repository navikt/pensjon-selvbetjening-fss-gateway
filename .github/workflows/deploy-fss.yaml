name: Build, push, deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE.md'
      - 'README.md'
  workflow_dispatch:
    inputs:
      prod:
        description: Deploy to production
        type: boolean
        required: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      id-token: write
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          cache: maven
          distribution: temurin
          java-version: 17
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java"
      - name: Create Docker image
        id: image-creation
        uses: nais/docker-build-push@v0
        with:
          dockerfile: .docker/Dockerfile
          team: pensjonselvbetjening
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.image-creation.outputs.image }}
  deploy-q2:
    name: Deploy Q2 to dev-fss
    needs: [ build ]
    if: github.event.inputs.prod != 'true'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy to dev-fss
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-fss
          IMAGE: ${{ needs.build.outputs.image }}
          RESOURCE: .nais/dev-fss.yml
  deploy-q0-q1:
    name: Deploy Q0, Q1 to dev-fss
    needs: [ build ]
    if: github.event.inputs.prod != 'true'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    strategy:
      matrix:
        environment: [q0, q1]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy to dev-fss
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-fss
          IMAGE: ${{ needs.build.outputs.image }}
          RESOURCE: .nais/dev-fss-multienv.yml
          VAR: environment=${{ matrix.environment }}
  deploy-prod:
    name: Deploy to prod-fss
    needs: [ build ]
    if: |
      github.ref == 'refs/heads/main' &&
      github.event_name == 'workflow_dispatch' &&
      github.event.inputs.prod == 'true'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy to prod-fss
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-fss
          IMAGE: ${{ needs.build.outputs.image }}
          RESOURCE: .nais/prod-fss.yml
